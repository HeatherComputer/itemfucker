buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "jitpack.io"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'com.github.GTNH2:ForgeGradle:FG_1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'forge'



version = "1.7.10-2.1"
group = "com.github.raveninthedark.itemfucker"
archivesBaseName = "itemfucker"
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"

    //replaceIn "src/main/java/com/mitchej123/hodgepodge/Hodgepodge.java"
    //replace "GRADLETOKEN_VERSION", ((String) project.version)

}

configurations {
    // configuration that holds jars to include in the jar
    shade
    provided
    embedded
    compile.extendsFrom provided, embedded
}

dependencies {
    
    implementation files("dependencies/SpongeMixins-1.3.0-dev.jar")
}


jar {
    appendix = minecraft.version

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand(
                'version': project.version,
                'mcversion': project.minecraft.version
        )
    }

    // copy everything else, that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }

//##########################################################################################################
//########################################    Mixin  Part   ################################################
//##########################################################################################################
def yourMixinConfig = 'mixins.itemfucker.json'
def refMapForYourConfig = 'mixins.itemfucker.refmap.json'
def relativePathToMixinAP = 'tools/mixin-0.8-SNAPSHOT.jar'

repositories {
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/maven/"
    }
}

dependencies {
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + refMapForYourConfig

def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"

jar {
    from refMap
    manifest {
        attributes.put("TweakClass", "org.spongepowered.asm.launch.MixinTweaker")
        attributes.put("FMLCorePluginContainsFMLMod", true)
        attributes.put("ForceLoadAsMod", true)
        attributes.put("MixinConfigs", yourMixinConfig)
    }
}

reobf {
    addExtraSrgFile mixinSrg
}

afterEvaluate {
    def fixedRelPathToAP = relativePathToMixinAP
    if(fixedRelPathToAP.startsWith('./') || fixedRelPathToAP.startsWith('.\\')){
        fixedRelPathToAP = fixedRelPathToAP.substring(2)
    } else if(fixedRelPathToAP.startsWith('/') || fixedRelPathToAP.startsWith('\\')){
        fixedRelPathToAP = fixedRelPathToAP.substring(1)
    }

    tasks.compileJava {
        println "Path: " + projectDir.absolutePath
        options.compilerArgs += [
                // There's a bug in the AnnotationProcessor for 0.7.11 that will generate the annotations pointing to the parent class instead of subclass
                // resulting in the mixin not being applied.  This is fixed in 0.8, however 0.8 needs guava > 21.0, and minecraft ships with 17.0.
                // So as a hacky workaround... ship with 0.7.11, but use the AP from 0.8 for compiling
                "-processorpath", projectDir.absolutePath + '/' + fixedRelPathToAP,
                "-processor", "org.spongepowered.tools.obfuscation.MixinObfuscationProcessorInjection,org.spongepowered.tools.obfuscation.MixinObfuscationProcessorTargets",
                "-Xlint:-sunapi", "-XDenableSunApiLintControl", "-XDignore.symbol.file",
                "-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"
        ]
    }
}

sourceSets {
    main {
        output.resourcesDir = output.classesDir
        ext.refMap = refMapForYourConfig
    }
}
